import(XML)
importFrom(RCurl, base64Encode)
import(codetools)

exportClass(VirtualXMLSchemaClass)


# Should go back to SSOAP or be renamed.
exportClass(SchemaType)
exportClasses("SchemaTypeReference", "BasicSchemaType", "SchemaVoidType")

exportClasses(StringEnum)

export(SchemaType) #, SOAPType)  # XXX kil off SOAPType
export(as.SOAPDateTime, as.SOAPDate)
exportClass(ID, NCName)
exportClasses(gYear, gYearMonth)
exportClasses(dateTime, time, date)
#exportClasses("SOAPDateTime", "SOAPDate")


# Back to SOAP now.
# export(WSDLParseHandlers)

export(readSchema,
       parseSchemaDoc,
       processSchemaTypes,
       processSchemaType)

export(XMLSchemaTypes)


export(fromXML)
exportMethods(fromXML)

exportClass(positiveInteger, NMTOKEN, normalizedCharacter)

# 
export(defineClasses)

export(resolve)
exportMethods(resolve)

export(coerceArgumentCode)



# Used in SSOAP

export(discardNamespace)
export(convertToSName)
export(simple.dQuote)


export(createFromXMLConverter)
exportMethods(createFromXMLConverter)


exportClass(string)

export(coerceListToS4)
exportMethods(coerce)

export(mapSchemaTypeToS)


exportClasses(SchemaCollection, SchemaTypes)


exportClasses(nonNegativeInteger)

export(expandS4, writeClassDef)  # , discardEnvironment)
exportMethods(expandS4)
export(exportClassDefs, exportClassDef)


exportClass(ListOfANY, ListOfAnySimpleType)
#export(as.string)


export(show)

export(asIntegerSetValue)

exportClass("URI")

export(computeOrder)
export(defClass)
exportMethods(defClass)

exportClasses(SchemaStringType, SchemaIntType, SchemaDoubleType, SchemaFloatType)
exportClass(string)

